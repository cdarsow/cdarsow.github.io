/**
 * Content module function
 *
 * @author Martin Szymanski
 */
'use strict';

var Stage = {
  init: function init() {
    var _this = this;
    _this.parallax();
  },

  bind: function bind() {},

  parallax: function parallax($element) {
    var lastScrollY = 0,
        ticking = false;

    function onScroll() {
      lastScrollY = window.pageYOffset || document.documentElement.scrollTop;
      requestTick();
    }

    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(update);
        ticking = true;
      }
    }

    // update element position while scrolling
    function update() {
      var st = window.pageYOffset || document.documentElement.scrollTop;

      $('.js-stage').css({
        'transform': 'translateY(' + st * 0.5 + 'px)'
      });

      ticking = false;
    }

    if (Breakpoint.value !== 'small') {
      window.addEventListener('scroll', onScroll, false);
    }
  }

};
/**
 * Blank file using revealing module pattern
 * Every .js-file within the /resources/js-directory will be concatenated into the final javascript-file
 *
 * @class main
 * @static
 * @author
 * @version  1.0
 * @return {Object} init-Function
 */

'use strict';

/**
 * Bind functions initially and on resize
 */
/*function resizeFunctions() {
    Breakpoint.refreshValue();
    Teaser.refreshValue();
    Teaser.closeAllExpandableItems();
    $('[data-equalizer]').trigger('resizeme.zf.trigger');
}

window.onload = resizeFunctions;
window.addEventListener('resize', Helper.debounce(function () {
    resizeFunctions();
}, 250));*/

(function (exports, d) {
    function domReady(fn, context) {

        function onReady(event) {
            d.removeEventListener('DOMContentLoaded', onReady);
            fn.call(context || exports, event);
        }

        function onReadyIe(event) {
            if (d.readyState === 'complete') {
                d.detachEvent('onreadystatechange', onReadyIe);
                fn.call(context || exports, event);
            }
        }

        d.addEventListener && d.addEventListener('DOMContentLoaded', onReady) || d.attachEvent && d.attachEvent('onreadystatechange', onReadyIe);
    }

    exports.domReady = domReady;
})(window, document);

domReady(function (event) {
    //$(document).foundation();
    /*Teaser.init();
    Nutrition.init();
    Forms.init();
    Content.init();
    Stage.init();
    Searchform.init();
    Stage.init();
    Navigation.init();
    Jobs.init();*/

    console.log("It's Guhl man.");
});
//# sourceMappingURL=main.min.js.map
